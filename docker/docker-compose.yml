version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - mysql_orders
      - mysql_products
      - mysql_customers

  nginx:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.nginx
    ports:
      - "8080:80"
    depends_on:
      - api
    volumes:
      - ../nginx/default.conf:/etc/nginx/conf.d/default.conf

  mysql_orders:
    image: mysql:8.0
    container_name: mysql_orders
    environment:
      MYSQL_ROOT_PASSWORD: spore23
      MYSQL_DATABASE: orders_db
      MYSQL_USER: user
      MYSQL_PASSWORD: spore23
    ports:
      - "3307:3306"
    volumes:
      - mysql-orders-data:/var/lib/mysql

  mysql_products:
    image: mysql:8.0
    container_name: mysql_products
    environment:
      MYSQL_ROOT_PASSWORD: spore23
      MYSQL_DATABASE: products_db
      MYSQL_USER: user
      MYSQL_PASSWORD: spore23
    ports:
      - "3306:3306"
    volumes:
      - mysql-products-data:/var/lib/mysql

  mysql_customers:
    image: mysql:8.0
    container_name: mysql_customers
    environment:
      MYSQL_ROOT_PASSWORD: spore23
      MYSQL_DATABASE: customers_db
      MYSQL_USER: user
      MYSQL_PASSWORD: spore23
    ports:
      - "3308:3306"
    volumes:
      - mysql-customers-data:/var/lib/mysql

volumes:
  mysql-orders-data:
  mysql-products-data:
  mysql-customers-data:
